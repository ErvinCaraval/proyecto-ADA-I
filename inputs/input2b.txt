jugadores = [
    Jugador(1, "Sofia Garcia", 21, 66),
    Jugador(2, "Alejandro Torres", 27, 24),
    Jugador(3, "Valentina Rodriguez", 19, 15),
    Jugador(4, "Juan Lopez", 22, 78),
    Jugador(5, "Martina Martinez", 30, 55),
    Jugador(6, "Sebastian Perez", 25, 42),
    Jugador(7, "Camila Fernandez", 24, 36),
    Jugador(8, "Mateo Gonzalez", 29, 89),
    Jugador(9, "Isabella Diaz", 40, 92),
    Jugador(10, "Daniel Ruiz", 17, 57),
    Jugador(11, "Luciana Sanchez", 18, 89),
    Jugador(12, "Lucas Vasquez", 26, 82),
    Jugador(13, "William Hernandez", 30, 44),
    Jugador(14, "Laura Perez", 20, 78),
    Jugador(15, "Santiago Rodriguez", 23, 32),
    Jugador(16, "Maria Gonzalez", 28, 65),
    Jugador(17, "Carlos Lopez", 19, 72),
    Jugador(18, "Valeria Martinez", 21, 45),
    Jugador(19, "Andres Perez", 30, 78),
    Jugador(20, "Sara Hernandez", 22, 56)
]

# Crear equipos y agregar jugadores
equipo1 = Equipo("Cali", "Futbol")
equipo1.agregar_jugador(jugadores[9]) 
equipo1.agregar_jugador(jugadores[1])  

equipo2 = Equipo("Medellin", "Volleyball")
equipo2.agregar_jugador(jugadores[0])  
equipo2.agregar_jugador(jugadores[8]) 
equipo2.agregar_jugador(jugadores[11]) 
equipo2.agregar_jugador(jugadores[5]) 

equipo3 = Equipo("Cali", "Futbol")
equipo3.agregar_jugador(jugadores[10])  
equipo3.agregar_jugador(jugadores[7])   
equipo3.agregar_jugador(jugadores[6])   

equipo4 = Equipo("Medellin", "Volleyball")
equipo4.agregar_jugador(jugadores[2])  
equipo4.agregar_jugador(jugadores[3])  
equipo4.agregar_jugador(jugadores[4])  

equipo5 = Equipo("Cali", "Basketball")
equipo5.agregar_jugador(jugadores[12])  
equipo5.agregar_jugador(jugadores[13])  
equipo5.agregar_jugador(jugadores[14])  
equipo5.agregar_jugador(jugadores[15])

equipo6 = Equipo("Medellin", "Basketball")
equipo6.agregar_jugador(jugadores[16])  
equipo6.agregar_jugador(jugadores[17])  
equipo6.agregar_jugador(jugadores[18])  
equipo6.agregar_jugador(jugadores[19])  

# Crear sedes y agregar equipos
sede1 = Sede("Sede Cali")
sede1.agregar_equipo(equipo1)
sede1.agregar_equipo(equipo2)
sede1.agregar_equipo(equipo5)

sede2 = Sede("Sede Medellin")
sede2.agregar_equipo(equipo3)
sede2.agregar_equipo(equipo4)
sede2.agregar_equipo(equipo6)


sede1.ordenar_equipos()
sede2.ordenar_equipos()



# Mostrar resultados de las sedes
print(f"{sede1.nombre}, Rendimiento: {sede1.rendimiento_promedio()}\n")
for equipo in sede1.equipos:
    print(f"{equipo.deporte}, Rendimiento: {equipo.rendimiento_promedio()}")
    print(equipo.obtener_jugadores_ordenados())
    print()

print(f"{sede2.nombre}, Rendimiento: {sede2.rendimiento_promedio()}\n")
for equipo in sede2.equipos:
    print(f"{equipo.deporte}, Rendimiento: {equipo.rendimiento_promedio()}")
    print(equipo.obtener_jugadores_ordenados())
    print()

# Ranking de jugadores
todos_los_jugadores = jugadores[:]
quicksort(todos_los_jugadores, 0, len(todos_los_jugadores) - 1, key=lambda x: x.rendimiento)
ranking_jugadores = ', '.join(str(j.id) for j in todos_los_jugadores)
print(f"Ranking Jugadores:\n{{ {ranking_jugadores} }}\n")

# Equipo con mayor y menor rendimiento
equipos_sede1 = sede1.equipos
equipos_sede2 = sede2.equipos

# Ordenar equipos por rendimiento promedio
quicksort(equipos_sede1, 0, len(equipos_sede1) - 1, key=lambda x: x.rendimiento_promedio())
quicksort(equipos_sede2, 0, len(equipos_sede2) - 1, key=lambda x: x.rendimiento_promedio())

equipo_mayor_rendimiento = equipos_sede2[-1]  # Último equipo de sede Medellin
equipo_menor_rendimiento = equipos_sede1[0]  # Primer equipo de sede Cali

print("\nEquipo con mayor rendimiento:", equipo_mayor_rendimiento.deporte, "en", sede2.nombre)
print("Equipo con menor rendimiento:", equipo_menor_rendimiento.deporte, "en", sede1.nombre)

# Jugador con mayor y menor rendimiento
jugador_mayor_rendimiento = todos_los_jugadores[-1]
jugador_menor_rendimiento = todos_los_jugadores[0]
print(f"Jugador con mayor rendimiento: {{ {jugador_mayor_rendimiento.id} , {jugador_mayor_rendimiento.nombre} , {jugador_mayor_rendimiento.rendimiento} }}")
print(f"Jugador con menor rendimiento: {{ {jugador_menor_rendimiento.id} , {jugador_menor_rendimiento.nombre} , {jugador_menor_rendimiento.rendimiento} }}\n")

# Jugador más joven y más veterano (sin usar min y max)
jugador_mas_joven = jugadores[0]
jugador_mas_veterano = jugadores[0]

for jugador in jugadores:
    if jugador.edad < jugador_mas_joven.edad:
        jugador_mas_joven = jugador
    if jugador.edad > jugador_mas_veterano.edad:
        jugador_mas_veterano = jugador

print(f"jugador mas joven: {{ {jugador_mas_joven.id} , {jugador_mas_joven.nombre} , {jugador_mas_joven.edad} }}")
print(f"jugador mas veterano: {{ {jugador_mas_veterano.id} , {jugador_mas_veterano.nombre} , {jugador_mas_veterano.edad} }}\n")


# Promedio de edad y rendimiento de los jugadores
edades = [jugador.edad for jugador in jugadores]
promedio_edad = sum(edades) / len(edades)
promedio_rendimiento = sum(jugador.rendimiento for jugador in jugadores) / len(jugadores)
print("\nPromedio de edad de los jugadores:", promedio_edad)
print("Promedio de rendimiento de los jugadores:", promedio_rendimiento)